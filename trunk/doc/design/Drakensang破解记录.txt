0A227B30                       00 6D 65 73 68 65 73 3A 63         eshes:c
0A227B40  68 61 72 61 63 74 65 72 73 2F 73 63 68 77 65 69  haracters/schwei
0A227B50  6E 5F 30 32 5F 73 6B 5F 30 2E 6E 76 78 32        n_02_sk_0.nvx2


meshs:characters/schwein_02_sk_0.nvx2

numGroups
00479F86   .  8B8D 20FFFFFF mov     ecx, [ebp-E0]
00479F8C   .  8948 40       mov     [eax+40], ecx

numVertices
00479FC5   .  8B8D 18FFFFFF mov     ecx, [ebp-E8]
00479FCB   .  8948 44       mov     [eax+44], ecx

fileVertexWidth
0047A004   .  8B8D 10FFFFFF mov     ecx, [ebp-F0]
0047A00A   .  8948 4C       mov     [eax+4C], ecx

numTriangles
0047A043   .  8B8D 08FFFFFF mov     ecx, [ebp-F8]
0047A049   .  8948 50       mov     [eax+50], ecx

numEdges
0047A082   .  8B8D 00FFFFFF mov     ecx, [ebp-100]
0047A088   .  8948 58       mov     [eax+58], ecx

fileVertexComponents
0047A0C1   .  8B8D F8FEFFFF mov     ecx, [ebp-108]
0047A0C7   .  8948 60       mov     [eax+60], ecx


numIndices
eax+54

fileVertexComponents
eax+60

validVertexComponents
eax+64

vertexComponents
eax+5c


Coord(position)
Uv0
Uv2

位置：
00463B85  /$  55            push    ebp


Coord    = (1<<0),
        Normal   = (1<<1),
        Uv0      = (1<<2),
        Uv1      = (1<<3),
        Uv2      = (1<<4),
        Uv3      = (1<<5),
        Color    = (1<<6),
        Tangent  = (1<<7),
        Binormal = (1<<8),
        Weights  = (1<<9),
        JIndices = (1<<10),
        Coord4   = (1<<11),

3	1				FLOAT3	POSITION	0
3	2				FLOAT3	NORMAL		0
1	4				UBYTE4N	NORMAL		0
1	8				FLOAT2	TEXCOORD	0
1	10				SHORT2	TEXCOORD	0
1	20				FLOAT2	TEXCOORD	1
1	40				SHORT2	TEXCOORD	1
1	80				FLOAT2	TEXCOORD	2
1	100				SHORT2	TEXCOORD	2
1	200				FLOAT2	TEXCOORD	3
1	400				SHORT2	TEXCOORD	3

4	800		color		FLOAT4	COLOR		0	
1	1000				UBYTE4N	COLOR		0
3	2000		targent		FLOAT3	TANGENT		0
1	4000				UBYTE4N	TANGENT		0
3	8000		binormal	FLOAT3	BINORMAL	0
1	10000				UBYTE4N	BINORMAL	0
4	20000		weights		FLOAT4	BLENDWEIGHT	0
1	40000				UBYTE4N	BLENDWEIGHT	0
4	80000		jindices	FLOAT4	BLENDINDICES	0
1	100000				UBYTE4	BLENDINDICES	0
4	200000		coord4		FLOAT4	POSITION	0

(1<<12)	1
(1<<13)	3
(1<<14)	1
(1<<15)	3
(1<<16)	1
(1<<17)	4
(1<<18)	1
(1<<19)	4
(1<<20)	1
(1<<21)	4

身体：vertex component
154015
101010100000000010101
FLOAT3	POSITION
UBYTE4N	NORMAL
SHORT2	TEXCOORD
UBYTE4N	TANGENT
UBYTE4N	BINORMAL
UBYTE4N	BLENDWEIGHT
UBYTE4	BLENDINDICES






// 静态
// Generated by Microsoft (R) D3DX9 Shader Compiler 
//
// Parameters:
//
//   float4x4 ModelViewProjection;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   ModelViewProjection c0       4
//
//
// Default values:
//
//   ModelViewProjection
//     c0   = { 0, 0, 0, 0 };
//     c1   = { 0, 0, 0, 0 };
//     c2   = { 0, 0, 0, 0 };
//     c3   = { 0, 0, 0, 0 };
//

    vs_2_0
    dcl_position v0
    dp4 oPos.x, v0, c0
    dp4 oPos.y, v0, c1
    dp4 oPos.w, v0, c3
    dp4 r0.x, v0, c2
    mov oPos.z, r0.x
    mov oT0.x, r0.x

// approximately 6 instruction slots used


//
// Generated by Microsoft (R) D3DX9 Shader Compiler 
    ps_2_0
    def c0, 0.00390625, 0, 0, 0
    def c1, 0, 1, 0, 0
    dcl t0.x
    frc r0.y, t0.x
    add r1.w, -r0.y, t0.x
    mul r0.x, r1.w, c0.x
    mov r0.z, c1.x
    mov r0.w, c1.y
    mov oC0, r0

// approximately 6 instruction slots used




骨骼动画

0 0 FLOAT3   DEFAULT POSITION 0 
0 12 UBYTE4N DEFAULT NORMAL 0 
0 16 SHORT2  DEFAULT TEXCOORD 0 
0 20 UBYTE4N DEFAULT TANGENT 0 
0 24 UBYTE4N DEFAULT BINORMAL 0 
0 28 UBYTE4N DEFAULT BLENDWEIGHT 0 
0 32 UBYTE4  DEFAULT BLENDINDICES 0 

//
// Generated by Microsoft (R) D3DX9 Shader Compiler 
//
// Parameters:
//
//   float4x3 JointPalette[72];
//   float4x4 ModelViewProjection;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   JointPalette        c0     216
//   ModelViewProjection c216     4
//
//
// Default values:
//
//   JointPalette
//     c0   = { 0, 0, 0, 0 };
...
//     c215 = { 0, 0, 0, 0 };
//
//   ModelViewProjection
//     c216 = { 0, 0, 0, 0 };
//     c217 = { 0, 0, 0, 0 };
//     c218 = { 0, 0, 0, 0 };
//     c219 = { 0, 0, 0, 0 };
//

    vs_2_0
    def c220, 1, 3, 0, 0
    dcl_position v0
    dcl_blendweight v1
    dcl_blendindices v2
    dp4 r0.x, v1, c220.x
    rcp r0.x, r0.x
    mul r0, r0.x, v1
    frc r1, v2
    add r1, -r1, v2
    mul r1, r1, c220.y
    mova a0, r1
    dp4 r1.x, v0, c0[a0.y]
    dp4 r1.y, v0, c1[a0.y]
    dp4 r1.z, v0, c2[a0.y]
    mul r1.xyz, r0.y, r1
    dp4 r2.x, v0, c0[a0.x]
    dp4 r2.y, v0, c1[a0.x]
    dp4 r2.z, v0, c2[a0.x]
    mad r1.xyz, r2, r0.x, r1
    dp4 r2.x, v0, c0[a0.z]
    dp4 r2.y, v0, c1[a0.z]
    dp4 r2.z, v0, c2[a0.z]
    mad r0.xyz, r2, r0.z, r1
    dp4 r1.x, v0, c0[a0.w]
    dp4 r1.y, v0, c1[a0.w]
    dp4 r1.z, v0, c2[a0.w]
    mad r0.xyz, r1, r0.w, r0
    mov r0.w, c220.x
    dp4 oPos.x, r0, c216
    dp4 oPos.y, r0, c217
    dp4 oPos.w, r0, c219
    dp4 r0.x, r0, c218
    mov oPos.z, r0.x
    mov oT0.x, r0.x

// approximately 30 instruction slots used

float4 weight, indices

float x = weight.x+weight.y+weight.z+weight.w;
x = 1/x;
float4 tmp0 = weight * x;
float4 tmp1 = floor(indices) * 3;



可用的模型：
schwein_02.n2		猪
smaragdspinne.n2	蜘蛛
smaragdspinne_klein.n2	蜘蛛
trollkroete.n2		蛤蟆









// 静态
stage texture0 正常贴图
stage texture1 高光


//
// Generated by Microsoft (R) D3DX9 Shader Compiler 
//
// Parameters:
//
//   float3 ModelEyePos;
//   float3 ModelLightPos;
//   float4x4 ModelViewProjection;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   ModelViewProjection c0       4
//   ModelEyePos         c4       1
//   ModelLightPos       c5       1
//
//
// Default values:
//
//   ModelViewProjection
//     c0   = { 0, 0, 0, 0 };
//     c1   = { 0, 0, 0, 0 };
//     c2   = { 0, 0, 0, 0 };
//     c3   = { 0, 0, 0, 0 };
//
//   ModelEyePos
//     c4   = { 0, 0, 0, 0 };
//
//   ModelLightPos
//     c5   = { 0, 0, 0, 0 };
//

    vs_2_0
    def c6, 0.000122070313, 2, -1, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_binormal v5
    mul oT0.xy, v2, c6.x
    mul oT1.xy, v3, c6.x
    mad r0.xyz, v4, c6.y, c6.z
    dp3 oT2.x, r0, c5
    mad r1.xyz, v5, c6.y, c6.z
    dp3 oT2.y, r1, c5
    mad r2.xyz, v1, c6.y, c6.z
    dp3 oT2.z, r2, c5
    add r3.xyz, -v0, c4
    nrm r4.xyz, r3
    dp3 r0.x, r0, r4
    dp3 r0.y, r1, r4
    dp3 r0.z, r2, r4
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT3.xyz, r0, r0.w
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    mov oPos, r0
    mov oT4, r0
    mov oT2.w, r0.z

// approximately 25 instruction slots used


//
// Generated by Microsoft (R) D3DX9 Shader Compiler 
//
// Parameters:
//
//   float4 FogDistances;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   FogDistances c0       1
//
//
// Default values:
//
//   FogDistances
//     c0   = { 0, 0, 0, 0 };
//

    preshader
    neg r0.x, c0.x
    add r1.x, r0.x, c0.y
    rcp c13.x, r1.x

// approximately 3 instructions used
//
// Generated by Microsoft (R) D3DX9 Shader Compiler 
//
// Parameters:
//
//   sampler2D Diff1Sampler;
//   sampler2D DiffSampler;
//   sampler2D EmsvSampler;
//   float4 FogColor;
//   float4 FogDistances;
//   float4 HalfPixelSize;
//   float Intensity0;
//   float4 LightAmbient;
//   float4 LightBackColor;
//   float LightBackFactor;
//   float4 LightDiffuse;
//   float4 LightSpecular;
//   float MatEmissiveIntensity;
//   float MatSpecularIntensity;
//   float MatSpecularPower;
//   float4 ShadowIndex;
//   sampler2D ShadowSampler;
//   sampler2D SpecSampler;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   HalfPixelSize        c0       1
//   LightDiffuse         c1       1
//   LightSpecular        c2       1
//   LightAmbient         c3       1
//   LightBackColor       c4       1
//   ShadowIndex          c5       1
//   LightBackFactor      c6       1
//   MatEmissiveIntensity c7       1
//   MatSpecularIntensity c8       1
//   MatSpecularPower     c9       1
//   Intensity0           c10      1
//   FogDistances         c11      1
//   FogColor             c12      1
//   DiffSampler          s0       1
//   Diff1Sampler         s1       1
//   SpecSampler          s2       1
//   EmsvSampler          s3       1
//   ShadowSampler        s4       1
//
//
// Default values:
//
//   HalfPixelSize
//     c0   = { 0, 0, 0, 0 };
//
//   LightDiffuse
//     c1   = { 0, 0, 0, 0 };
//
//   LightSpecular
//     c2   = { 0, 0, 0, 0 };
//
//   LightAmbient
//     c3   = { 0, 0, 0, 0 };
//
//   LightBackColor
//     c4   = { 0, 0, 0, 0 };
//
//   ShadowIndex
//     c5   = { 0, 0, 0, 0 };
//
//   LightBackFactor
//     c6   = { 0, 0, 0, 0 };
//
//   MatEmissiveIntensity
//     c7   = { 0, 0, 0, 0 };
//
//   MatSpecularIntensity
//     c8   = { 1, 0, 0, 0 };
//
//   MatSpecularPower
//     c9   = { 0, 0, 0, 0 };
//
//   Intensity0
//     c10  = { 0, 0, 0, 0 };
//
//   FogDistances
//     c11  = { 0, 0, 0, 0 };
//
//   FogColor
//     c12  = { 0, 0, 0, 0 };
//

    ps_2_0
    def c14, 0.5, -0.5, 1, 0
    dcl t0.xy
    dcl t1.xy
    dcl t2
    dcl t3.xyz
    dcl t4
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    rcp r0.w, t4.w
    mul r0.xy, r0.w, t4
    mov r1.xy, c14
    mad r0.xy, r0, r1, c0
    add r0.xy, r0, c14.x
    texld r0, r0, s4
    texld r1, t0, s2
    texld r2, t1, s1
    texld r3, t0, s0
    texld r4, t0, s3
    dp4 r0.w, c5, r0
    add r0.w, -r0.w, c14.z
    dp3 r1.w, t2, t2
    rsq r1.w, r1.w
    mul r2.w, r1.w, t2.z
    mul_sat r0.w, r0.w, r2.w
    mov r0.xyz, t2
    mad r0.xyz, r0, r1.w, t3
    mad_sat r1.w, t2.z, -r1.w, c6.x
    dp3 r2.w, r0, r0
    rsq r2.w, r2.w
    mul_sat r2.w, r0.z, r2.w
    pow r4.w, r2.w, c9.x
    mul r2.w, r4.w, c8.x
    mul r0.xyz, r1, c2
    mul r0.xyz, r2.w, r0
    mul r1.xyz, r2, c10.x
    mul r3.xyz, r3, r1
    mad r0.xyz, r3, c1, r0
    mov r2.xyz, c3
    mov r2.w, c14.z
    mul r2, r3, r2
    mul r1.xyz, r3, c4
    mad r1.xyz, r1.w, r1, r2
    mad r0.xyz, r0.w, r0, r1
    mad r0.xyz, r4, c7.x, r0
    add r0.w, -t2.w, c11.y
    mul r0.w, r0.w, c13.x
    max r1.w, r0.w, c12.w
    min r0.w, r1.w, c14.z
    lrp r2.xyz, r0.w, r0, c12
    mov oC0, r2

// approximately 44 instruction slots used (5 texture, 39 arithmetic)

